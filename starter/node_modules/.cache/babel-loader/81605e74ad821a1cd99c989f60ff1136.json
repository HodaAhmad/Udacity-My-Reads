{"ast":null,"code":"var _jsxFileName = \"/Users/hodaanis/Documents/My-Reads/starter/src/App.js\",\n    _s = $RefreshSig$();\n\nimport \"./App.css\";\nimport React from \"react\";\nimport { Route, Routes } from \"react-router-dom\";\nimport * as BooksAPI from './BooksAPI';\nimport SearchBook from \"./SearchBook\";\nimport Shelves from \"./Shelves\";\nimport { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [books, setBooks] = useState([]);\n  const [query, setQuery] = useState([]);\n  useEffect(() => {\n    BooksAPI.getAll().then(res => {\n      setBooks(res);\n    });\n  }, []);\n\n  const changeShelf = (book, shelf) => {\n    book.shelf = shelf;\n    BooksAPI.update(book, shelf).then(() => {\n      setBooks([...books.filter(b => b.id !== book.id), book]);\n    });\n  };\n\n  function search(value) {\n    value ? BooksAPI.search(value).then(books => {\n      books.length ? setQuery(books) : setQuery([]);\n    }) : setQuery([]);\n  }\n\n  function incorrect() {\n    setQuery([]);\n  }\n\n  const currentlyReading = books.filter(book => book.shelf === \"currentlyReading\");\n  const wantToRead = books.filter(book => book.shelf === \"wantToRead\");\n  const read = books.filter(book => book.shelf === \"read\");\n  return /*#__PURE__*/_jsxDEV(Routes, {\n    children: [/*#__PURE__*/_jsxDEV(Route, {\n      exact: true,\n      path: \"/\",\n      render: () => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"list-books\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"list-books-title\",\n          children: /*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"MyReads\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"list-books-content\",\n          children: [\"console.console.log(books);\", /*#__PURE__*/_jsxDEV(Shelves, {\n            shelf: currentlyReading,\n            title: \"Currently Reading\",\n            changeShelf: changeShelf,\n            listBooksHomePage: books\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Shelves, {\n            shelf: wantToRead,\n            title: \"Want To Read\",\n            changeShelf: changeShelf,\n            listBooksHomePage: books\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Shelves, {\n            shelf: read,\n            title: \"Read\",\n            changeShelf: changeShelf,\n            listBooksHomePage: books\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"open-search\",\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/search\",\n            children: \"Add a book\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 15\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      exact: true,\n      path: \"/search\",\n      render: () => /*#__PURE__*/_jsxDEV(SearchBook, {\n        search: search,\n        changeShelf: changeShelf,\n        result: query,\n        listBooksHomePage: books,\n        incorrect: incorrect\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 15\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"CQnGERYpByJpvEd+Pok0SG2K1p4=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/hodaanis/Documents/My-Reads/starter/src/App.js"],"names":["React","Route","Routes","BooksAPI","SearchBook","Shelves","useState","useEffect","Link","App","books","setBooks","query","setQuery","getAll","then","res","changeShelf","book","shelf","update","filter","b","id","search","value","length","incorrect","currentlyReading","wantToRead","read"],"mappings":"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","sourcesContent":["import \"./App.css\";\nimport React from \"react\";\nimport {Route, Routes} from \"react-router-dom\"\nimport * as BooksAPI from './BooksAPI'\nimport SearchBook from \"./SearchBook\";\nimport Shelves from \"./Shelves\";\nimport { useState, useEffect } from \"react\";\nimport {Link} from \"react-router-dom\"\n\nconst App = () => {\n  const [books, setBooks] = useState([]);\n  const [query, setQuery] = useState([]);\n\n  useEffect(() => {\n    BooksAPI.getAll()\n    .then((res) => {\n      setBooks(res)\n    })\n  }, []);\n\n  const changeShelf = (book, shelf) =>{\n    book.shelf = shelf;\n    BooksAPI.update(book, shelf).then(() => {\n      setBooks([...books.filter((b) => b.id !== book.id), book])\n    });\n  }\n\n  function search(value){\n    value?\n    BooksAPI.search(value)\n    .then((books) =>{\n      books.length?\n      setQuery(books) : setQuery([])\n    }) :\n    setQuery([])\n  }\n\n  function incorrect(){\n    setQuery([])\n  }\n\n  const currentlyReading = books.filter(book => book.shelf === \"currentlyReading\")\n  const wantToRead = books.filter(book => book.shelf === \"wantToRead\")\n  const read = books.filter(book => book.shelf === \"read\")\n\n  return (\n    <Routes>\n      <Route\n            exact path = '/'\n            render = {()=>(\n              <div className=\"list-books\">\n              <div className=\"list-books-title\">\n                <h1>MyReads</h1>\n              </div>\n              <div className=\"list-books-content\">\n                console.console.log(books);\n                <Shelves \n                  shelf = {currentlyReading} \n                  title = 'Currently Reading'\n                  changeShelf = {changeShelf}\n                  listBooksHomePage = {books}\n                />\n                <Shelves \n                  shelf = {wantToRead} \n                  title = 'Want To Read'\n                  changeShelf = {changeShelf}\n                  listBooksHomePage = {books}\n                />\n                <Shelves \n                  shelf = {read} \n                  title = 'Read'\n                  changeShelf = {changeShelf}\n                  listBooksHomePage = {books}\n                />\n              </div>\n              <div className=\"open-search\">\n                <Link to ='/search'>Add a book</Link>\n              </div>\n            </div>\n            )}\n            /> \n            \n          <Route\n            exact path = '/search'\n            render = {()=>(\n              <SearchBook \n              search = {search} \n              changeShelf={changeShelf}\n              result = {query}\n              listBooksHomePage = {books}\n              incorrect = {incorrect}\n              />\n            )}\n          />\n    </Routes>\n  )\n}\n\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}