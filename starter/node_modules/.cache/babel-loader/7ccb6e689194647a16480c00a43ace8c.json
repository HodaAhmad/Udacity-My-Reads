{"ast":null,"code":"var _jsxFileName = \"/Users/hodaanis/Documents/My-Reads/starter/src/App.js\",\n    _s = $RefreshSig$();\n\nimport \"./App.css\";\nimport { useState, useEffect } from \"react\";\nimport ListBoooks from \"./ListBooks\";\nimport { Route, Routes } from \"react-router-dom\";\nimport * as BooksAPI from './BooksAPI';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [showSearchPage, setShowSearchpage] = useState(false);\n  useEffect(() => {\n    const getAll = async () => {\n      const res = await BooksAPI.getAll();\n      setShowSearchpage(res);\n    };\n\n    getAll();\n  }, []);\n\n  const updateState = async (id, shelf) => {\n    await BooksAPI.update(id, shelf);\n    const updateState = showSearchPage.map(b => {\n      if (b.id === id) b.shelf = shelf;\n      return b;\n    });\n    setShowSearchpage(updateState);\n  };\n\n  const addNew = async (id, shelf) => {\n    !showSearchPage.find(b => b.id === id) && (await BooksAPI.get(id).then(res => {\n      res.shelf = shelf;\n      setShowSearchpage([...showSearchPage, res]);\n    }));\n  };\n\n  return /*#__PURE__*/_jsxDEV(Routes, {\n    children: [/*#__PURE__*/_jsxDEV(Route, {\n      path: \"/\",\n      element: /*#__PURE__*/_jsxDEV(ListBoooks, {\n        showSearchPage: showSearchPage,\n        updateState: updateState\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 32\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: \"/search\",\n      element: /*#__PURE__*/_jsxDEV(SearchBook, {\n        addNew: addNew,\n        showSearchPage: showSearchPage,\n        updateState: updateState\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 38\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"sjg6veDHducyJHEhv13Y0nRWD0g=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/hodaanis/Documents/My-Reads/starter/src/App.js"],"names":["useState","useEffect","ListBoooks","Route","Routes","BooksAPI","App","showSearchPage","setShowSearchpage","getAll","res","updateState","id","shelf","update","map","b","addNew","find","get","then"],"mappings":";;;AAAA,OAAO,WAAP;AACA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,UAAP,MAAuB,aAAvB;AACA,SAAQC,KAAR,EAAeC,MAAf,QAA4B,kBAA5B;AACA,OAAO,KAAKC,QAAZ,MAA0B,YAA1B;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,cAAD,EAAiBC,iBAAjB,IAAsCR,QAAQ,CAAC,KAAD,CAApD;AACAC,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMQ,MAAM,GAAG,YAAY;AACzB,YAAMC,GAAG,GAAG,MAAML,QAAQ,CAACI,MAAT,EAAlB;AACAD,MAAAA,iBAAiB,CAACE,GAAD,CAAjB;AACD,KAHD;;AAIAD,IAAAA,MAAM;AACP,GANQ,EAMN,EANM,CAAT;;AAQA,QAAME,WAAW,GAAG,OAAOC,EAAP,EAAWC,KAAX,KAAqB;AACvC,UAAMR,QAAQ,CAACS,MAAT,CAAgBF,EAAhB,EAAoBC,KAApB,CAAN;AACA,UAAMF,WAAW,GAAGJ,cAAc,CAACQ,GAAf,CAAmBC,CAAC,IAAE;AACxC,UAAGA,CAAC,CAACJ,EAAF,KAASA,EAAZ,EAAgBI,CAAC,CAACH,KAAF,GAAUA,KAAV;AAChB,aAAOG,CAAP;AACD,KAHmB,CAApB;AAIAR,IAAAA,iBAAiB,CAACG,WAAD,CAAjB;AACD,GAPD;;AASA,QAAMM,MAAM,GAAG,OAAML,EAAN,EAAUC,KAAV,KAAmB;AAChC,KAACN,cAAc,CAACW,IAAf,CAAoBF,CAAC,IAAGA,CAAC,CAACJ,EAAF,KAASA,EAAjC,CAAD,KAAyC,MAAMP,QAAQ,CAACc,GAAT,CAAaP,EAAb,EAAiBQ,IAAjB,CAC7CV,GAAG,IAAI;AACLA,MAAAA,GAAG,CAACG,KAAJ,GAAYA,KAAZ;AACAL,MAAAA,iBAAiB,CAAC,CAAC,GAAGD,cAAJ,EAAoBG,GAApB,CAAD,CAAjB;AACD,KAJ4C,CAA/C;AAMD,GAPD;;AASA,sBACE,QAAC,MAAD;AAAA,4BACE,QAAC,KAAD;AAAO,MAAA,IAAI,EAAC,GAAZ;AAAgB,MAAA,OAAO,eAAE,QAAC,UAAD;AAAY,QAAA,cAAc,EAAEH,cAA5B;AAA4C,QAAA,WAAW,EAAEI;AAAzD;AAAA;AAAA;AAAA;AAAA;AAAzB;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,KAAD;AAAO,MAAA,IAAI,EAAC,SAAZ;AAAsB,MAAA,OAAO,eAAE,QAAC,UAAD;AAAY,QAAA,MAAM,EAAEM,MAApB;AAA4B,QAAA,cAAc,EAAEV,cAA5C;AAA4D,QAAA,WAAW,EAAEI;AAAzE;AAAA;AAAA;AAAA;AAAA;AAA/B;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAMD;;GAlCQL,G;;KAAAA,G;AAoCT,eAAeA,GAAf","sourcesContent":["import \"./App.css\";\nimport { useState, useEffect } from \"react\";\nimport ListBoooks from \"./ListBooks\";\nimport {Route, Routes} from \"react-router-dom\"\nimport * as BooksAPI from './BooksAPI'\n\nfunction App() {\n  const [showSearchPage, setShowSearchpage] = useState(false);\n  useEffect(() => {\n    const getAll = async () => {\n      const res = await BooksAPI.getAll();\n      setShowSearchpage(res);\n    }\n    getAll();\n  }, []);\n\n  const updateState = async (id, shelf) => {\n    await BooksAPI.update(id, shelf);\n    const updateState = showSearchPage.map(b=>{\n      if(b.id === id) b.shelf = shelf;\n      return b;\n    })\n    setShowSearchpage(updateState)\n  }\n  \n  const addNew = async(id, shelf) =>{\n    !showSearchPage.find(b=> b.id === id) && await BooksAPI.get(id).then(\n      res => {\n        res.shelf = shelf;\n        setShowSearchpage([...showSearchPage, res])\n      }\n    )\n  }\n\n  return (\n    <Routes>\n      <Route path=\"/\" element={<ListBoooks showSearchPage={showSearchPage} updateState={updateState}/>}></Route>\n      <Route path=\"/search\" element={<SearchBook addNew={addNew} showSearchPage={showSearchPage} updateState={updateState} />}></Route>\n    </Routes>\n  )\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}